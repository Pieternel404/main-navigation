/* --------------- Component Main Navigation Horizontal ----------- */

// Component: Main_Navigation_Horizontal (mNav)
// Author: Pieternel de Jonge
// Date last changed: 06/02/2020

// Todo
// Replace colors and background-colors with variables
// Button should only be generated under certain circumstances and is not needed on large screens.

// Spans with class -noLink have a tab-index of zero and therefore are focusable.
// From my point of view, it makes the navigation more accessible, but I´ll have to look further into that.

/* ******* Toplist (ul) *********** */

.mNav {
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
  width: max-content; /* Not supported by IE10/11 and Edge at the moment (7 Feb 2020) */
  position: absolute;
  right: 1em;
  bottom: -1px;
}

.mNav [hidden] {display: none;}

.mNav {
  // button (is generated by JavaScript)
  &__button {
    padding: 3px 1.5em 3px 0.5em;
    background-color: aqua;
    border: 1px solid;
    display: none;

    &:focus {
      background-color: orangered;
      outline: none;
    }
  }
}

.mNav {
  // topList
  &__topList {
    position: relative;
    display: flex;
    border: 1px solid transparent;
    font: normal 1.05em/1 Arial, sans-serif;
    padding: 0 .3em;

    &:focus-within {border-color: $menucolor-border;}
    &:hover,
    &:focus {border-color: $menucolor-border;}
  }

  // topListItem
  &__topListItem {
    list-style: none;
    padding: 0px;

    // topListItem pseudo-classes
    &:not(:first-child) {margin-left: 1em;}
  }

  // topListLink
  &__topListLink {
    display: block;
    color: $menucolor-txt;
    text-decoration: none;
    padding: 0px 0.5em;

    &.-noLink {
      text-decoration: none;
      color: $menucolor-inactive-txt;
    }

    // topListLink pseudo-classes and pseudo-elements     
    &:focus,
    &:hover {
      outline: none;
      text-decoration: underline;
    }

    &:not(:only-child) {
      padding-right: 1.5em;
      background: transparent url("../img/dropdown_arrow.png") no-repeat right center/1.5em;
    }
  } 

  &__topListItem:focus-within &__topListLink:not(:only-child) {background-image: url("../img/up_arrow.png");}

  &__topListItem:focus &__topListLink:not(:only-child),
  &__topList:hover &__topListItem:not(:hover) &__topListLink:not(:only-child) {background-image: url("../img/dropdown_arrow.png");}

  // topListSpan
  &__topListSpan {
    padding: 7px 0 10px;
    border-top: 3px solid $menucolor-bg;
    display: inline-block;
  }

  // topListSpan pseudo-classes
  &__topListLink:focus > &__topListSpan {border-top-color: $menucolor-border;} 
  &__topListLink:hover:not(:focus-within) > &__topListSpan {border-top-color: $menucolor-border;}
  &__topListLink:hover:not(:focus) > &__topListSpan {border-top-color: $menucolor-border;}
  &__topListLink.-noLink:hover > &__topListSpan {border-top-color: #CCC;}
  &__topListLink.-noLink:focus > &__topListSpan {border-top-color: #CCC;}
  &__topList:hover &__topListLink:not(:hover) &__topListSpan {border-top-color: $menucolor-bg;}

}


/* *************** Object ARROW *************** */

// Dit zorgt ervoor dat de arrow gepositioneerd wordt t.o.v. het a element.
// Let op: je kunt geen focus gebruiken omdat het een listitem is.;
.mNav__topListItem:focus-within .mNav__topListLink:not(:only-child) {position: relative;}
.mNav__topListItem:hover .mNav__topListLink:not(:only-child) {position: relative;}

.mNav__topListItem:focus-within .mNav__topListLink:not(:only-child)::after,
.mNav__topListItem:focus-within .mNav__topListLink:not(:only-child)::before {
  content: "";
  z-index: 1;
  position: absolute;
  top: 100%;
  left: 50%;

  border: solid transparent;
  height: 0;
  width: 0;
  pointer-events: none;
}

.mNav__topListItem:hover .mNav__topListLink:not(:only-child)::after,
.mNav__topListItem:hover .mNav__topListLink:not(:only-child)::before {
  z-index: 1;
  top: 100%;
  left: 50%;
  border: solid transparent;
  content: "";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}

.mNav__topListItem:focus-within .mNav__topListLink:not(:only-child)::after {
  border-color: rgba(193, 177, 214, 0);
  border-top-color: $menucolor-bg;
  border-width: 15px;
  margin-left: -15px;
}

.mNav__topListItem:hover .mNav__topListLink:not(:only-child)::after {
  border-color: rgba(193, 177, 214, 0);
  border-top-color: $menucolor-bg;
  border-width: 15px;
  margin-left: -15px;
}

.mNav__topListItem:focus-within .mNav__topListLink:not(:only-child)::before {
  border-color: rgba(0, 0, 0, 0);
  border-top-color: $menucolor-border;
  border-width: 16px;
  margin-left: -16px;
}

.mNav__topListItem:hover .mNav__topListLink:not(:only-child)::before {
  border-color: rgba(0, 0, 0, 0);
  border-top-color: $menucolor-border;
  border-width: 16px;
  margin-left: -16px;
}

// This mimicks a general sibling selector (which doesn't exist).
// Normally if there is focus on a listLink and you switch to using a mouse (hover), the pseudo-element (triangle) that is focused will still be visible.
// This statement prevents that two different pseudo-elements will be visible at the same time.
.mNav__topList:hover .mNav__topListItem:not(:hover) .mNav__topListLink:not(:only-child)::before,
.mNav__topList:hover .mNav__topListItem:not(:hover) .mNav__topListLink:not(:only-child)::after {content: none;}

/* ********** End Object ARROW ********** */

// subList
.mNav {
  &__subList {
    background: $menucolor-bg;
    display: inline-flex;
    flex-direction: column;
    position: absolute;
    top: 100%;
    width: calc(100% + 2px);
    border: 1px solid #333;
    // I do not use display none or visibility hidden, I want to have the subList visible in case javascript and/or css are disabled
    left: -200vw;
    padding: 20px 0;
    border-radius: 0 0 10px 10px;
  }

  // subList pseudo-classes
  // This mimicks a general sibling selector (which doesn't exist).
  // Normally if there is focus on a listLink and you switch to using a mouse (hover), the subList that is focused will still be visible.
  // This statement prevents that two different subLists will be visible at the same time.
  // If you hover over the topList, the topListItems that is not hovered will not show, even if it has focus.
  &__topList:hover > &__topListItem:not(:hover) &__subList {left: -200vw;}

  &__topListItem:focus-within &__subList {left: -1px;}
  &__topListItem:hover &__subList {left: -1px;}

  // subListItem
  &__subListItem {
    list-style: none;
    
    &:not(:last-of-type) {border-bottom: 1px dotted $menucolor-border;}
  }

  // subListLink
  &__topListItem:hover &__topListLink:not(:only-child) {background-image: url("../img/up_arrow.png");} 

  &__subListLink {
    display: block;
    padding: 7px 0;
    text-decoration: none;
  
    // subListLink pseudo-classes
    &:hover,
    &:focus {
      background: $menucolor-bg-hover;
      text-decoration: underline;
      text-decoration-color: $menucolor-txt;
    }

    &:hover,
    &:focus,
    &.-noLink:hover,
    &.-noLink:focus {outline: none;}
  }

  // subListLink modifiers
  &__subListLink.-noLink {text-decoration: none;}

  // These CSS selectors mimick the ´all siblings´ selector (which does not exist)
  &__topList:hover &__subListLink:not(:hover),
  &__subList:hover &__subListLink:not(:hover) {
    background-color: $menucolor-bg;
    text-decoration: none;
  }

  //subListSpan
  &__subListSpan {
    padding: 0 10px 0 40px;
    display: block;
    background: transparent url("../img/arrow-right.png") no-repeat 8px 1px/1em;
    color: $menucolor-txt;
  }

  &__subListLink.-noLink &__subListSpan {
    background: none;
    color: $menucolor-inactive-txt;
  }

}

// I don´t want transitions enabled on mobile devices
.mNav {
  &__subListLink:hover &__subListSpan,
  &__subListLink:focus &__subListSpan {
    background-position: 20px 1px;
    transition: background-position 0.3s ease;
  }

  &__topList:hover .mNav__subListLink:not(:hover) .mNav__subListSpan,
  &__subList:hover .mNav__subListLink:not(:hover) .mNav__subListSpan {background-position: 8px 1px;}
}

  /* --------------- End component - Main_Navigation_Horizontal (mNav) ----------- */ 




  // Even uitzoeken waar dit voor is en of het nodig is. Positionering van subList ???
  /*
    .mNav__topListItem:focus-within &__topListLink:not(:only-child) {position: relative;}
    .mNav__topListItem:hover [class$=mNav__topListLink]:first-child:nth-last-child(2)
  */